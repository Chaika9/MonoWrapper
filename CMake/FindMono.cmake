set (MONO_DEFAULT_INSTALL_PATH "C:/Program Files")

message(STATUS "Mono install path: ${MONO_DEFAULT_INSTALL_PATH}")

find_program(MONO_EXECUTABLE mono
	PATHS
		${MONO_DEFAULT_INSTALL_PATH}/Mono/bin
	DOC
		"The mono executable"
)

find_program(MONO_MCS_EXECUTABLE mcs.bat
	PATHS
		${MONO_DEFAULT_INSTALL_PATH}/Mono/bin
)

find_program(MONO_PKG_CONFIG_EXECUTABLE pkg-config
	PATHS
		${MONO_DEFAULT_INSTALL_PATH}/Mono/bin
)

find_library(MONO_MAIN_LIBRARY
	NAMES
		mono-2.0 monosgen-2.0 mono-2.0-sgen
	PATHS
		${MONO_DEFAULT_INSTALL_PATH}/Mono/lib
	DOC
		"The mono-2.0 library"
)

set(MONO_FOUND FALSE CACHE INTERNAL "")

if(MONO_EXECUTABLE AND MONO_MCS_EXECUTABLE AND MONO_PKG_CONFIG_EXECUTABLE AND MONO_MAIN_LIBRARY)
	set(MONO_FOUND TRUE CACHE INTERNAL "")

	get_filename_component(MONO_LIBRARY_PATH "${MONO_MAIN_LIBRARY}" DIRECTORY)
	set(MONO_LIBRARY_PATH "${MONO_LIBRARY_PATH}" CACHE PATH "")

	get_filename_component(MONO_INCLUDE_PATH "${MONO_LIBRARY_PATH}/../include/mono-2.0" ABSOLUTE)
	set(MONO_INCLUDE_PATH "${MONO_INCLUDE_PATH}" CACHE PATH "")
	set(MONO_ASSEMBLY_PATH "${MONO_LIBRARY_PATH}" CACHE PATH "")

	get_filename_component(MONO_CONFIG_PATH "${MONO_LIBRARY_PATH}/../etc" ABSOLUTE)
	set(MONO_CONFIG_PATH "${MONO_CONFIG_PATH}" CACHE PATH "")

	get_filename_component(MONO_BINARY_PATH "${MONO_LIBRARY_PATH}/../bin" ABSOLUTE)
	set(MONO_BINARY_PATH "${MONO_BINARY_PATH}" CACHE PATH "")

	set(MONO_LIBRARIES "${MONO_MAIN_LIBRARY}" CACHE STRING "")

	execute_process(COMMAND "${MONO_MCS_EXECUTABLE}" "--version" OUTPUT_VARIABLE MONO_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
	string(REGEX REPLACE ".*version ([^ ]+)" "\\1" MONO_VERSION "${MONO_VERSION}")
	message(STATUS "Found Mono version: ${MONO_MAIN_LIBRARY} (found version \"${MONO_VERSION}\")")

	message(STATUS ${MONO_INCLUDE_PATH})
	message(STATUS ${MONO_LIBRARY_PATH})
	message(STATUS ${MONO_BINARY_PATH})
	message(STATUS ${MONO_LIBRARIES})
endif()